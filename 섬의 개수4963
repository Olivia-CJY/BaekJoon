//섬의 개수
//https://www.acmicpc.net/problem/4963

#pragma warning (disable:4996)
#include <stdio.h>
#include <queue>

using namespace std;
int main() {

	freopen("input_4963.txt", "r", stdin);
	while (true) {
		
		int w, h;
		scanf("%d %d\n", &w, &h);
		if (w == 0 && h == 0) return 0;

		int map[51][51] = { 0, };
		bool check[51][51] = { false, };

		for (int i = 0; i < h; i++) {
			for (int j = 0; j < w; j++) {
				scanf("%d ", &map[i][j]);
			}
		}

		/*for (int i = 0; i < h; i++) {
			for (int j = 0; j < w; j++) {
				printf("%d", map[i][j]);
			}
		}*/

		queue <pair<int, int>> q;
		int group = 0;
		int dx[8] = { -1,-1,1,1,0,0,1,-1 };
		int dy[8] = { -1,1,-1,1,1,-1,0,0 };

		for (int i = 0; i < h; i++) {
			for (int j = 0; j < w; j++) {
				if (map[i][j] == 1 && check[i][j] == false) {
					check[i][j] = true;
					q.push(make_pair(i, j));
					group++;
					while (!q.empty()) {
						int x = q.front().first;
						int y = q.front().second;
						q.pop();
						for (int k = 0; k < 8; k++) {
							int nx = x + dx[k];
							int ny = y + dy[k];
							if (nx >= 0 && nx < h && ny >= 0 && ny < w) {
								if (map[nx][ny] == 1 && check[nx][ny] == false) {
									check[nx][ny] = true;
									q.push(make_pair(nx, ny));
								}
							}
						}
					}
				}
			}
		}

		printf("%d\n", group);
	}
	return 0;
}
